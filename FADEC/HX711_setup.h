/**
 * @copyright   Николай Крашенинников
 * @project     Измерительный комплекс СУ
 * @file        HX711_setup.h
 * @brief       Библиотека подпрограмм настройки тензодатчика HX711, заголовочный файл.
 *
 * $Revision: 26 $
 * $Author: Николай $
 * $Date:: 2015-11-03 08:01:35#$
 */

#ifndef HX711_SETUP_H
#define HX711_SETUP_H 1

#include "HX711.h"

/**
 * @todo Функции настройки тензодатчика и работы с EEPROM в части тензодатчика лучше перенести
 *       в основной класс работы с тензодатчиком.
 */

/**
 * @defgroup EEPROM Алгоритмы работы с EEPROM.
 * Алгоритмы осуществляют запись и чтение данных настройки тензодатчика в EEPROM. Данные хранятся
 * в следующем формате:
 * Смещение | Параметр      | Тип
 * -------- | ------------- | ------
 * 0-3      | Мастабировка  | double
 * 4-7      | Смещение нуля | long
 * 8-11     | CRC32         | long
 * <b>Примечание:</b> смещение указано в байтах.
 * Добавление контрольной суммы алгоритмы осуществляют самостоятельно, так же как и сверку
 * контрольной суммы при загрузке данных. При несовпадении контрольной суммы (повреждение
 * данных или отсутствие записи) подставляются подобранные экспериментальным путем значения.
 * @{
 */

/**
 * Сохранение информации в EEPROM.
 * Выполняет последовательное сохранение переданных ей параметров в установленном формате с
 * автоматическим подсчетом и записью в конец CRC32. Параметры вычисляются в ходе выполнения
 * процедуры настройки тензодатчика с помощью функции #scale().
 *
 * @param[in] scale Масштабировка.
 * @param[in] offset Смещение нуля.
 * @return Успешно ли прошло сохранение: true успешно, false ошибка при сохранении.
 *
 * @note На данный момент функция всегда возвращает true.
 */
bool EEPROM_save(double scale, long offset);

/**
 * Загрузка информации из EEPROM.
 * Выполняет последовательное считывание из EEPROM параметров в установленном формате с проверкой
 * контрольной суммы CRC32 данных на верность. В случае несовпадения контрольной суммы возвращаются
 * подобранные экспериментальным путем значения и об ошибке работы сообщается в коде возврата.
 *
 * @param[out] scale Ссылка для сохранения масштабировки.
 * @param[out] offset Ссылка для сохранения смещение нуля.
 * @return Успешно ли прошла загрузка: true успешно, false ошибка при загрузке.
 */
bool EEPROM_load(double &scale, long &offset);

/**
 * @}
 */

/**
 * Настройки тензодатчика: масштабировка и подсчет нейтральной точки ("веса тары").
 *
 * @param[in,out] loadcell Тензоодатчик.
 * @return Успешно ли прошла настройка: true успешно, false ошибка при настройке.
 *
 * @note Даже если функция вернула false (т.е. ошибка), тензодатчик все равно перенастраивается.
 */
bool HX711_setup(HX711 &loadcell);

/**
 * Настройки тензодатчика, используя заранее известную масштабировку и величину нейтральной
 * точки ("веса тары").
 * Выполняет чтение настроек из EEPROM, в случае ошибки настраивает масштабировку и нейтральную
 * точку значениями по умолчанию (какие-то более или менее верные, подобранные).
 *
 * @param[in,out] loadcell Тензоодатчик.
 * @return Успешно ли прошла настройка: true успешно, false ошибка при настройке.
 */
bool HX711_preload(HX711 &loadcell);

#endif  /* HX711_SETUP_H */
